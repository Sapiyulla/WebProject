window.onload = async () => {
    var courses = await LoadCourses()

    var Main = document.createElement('main');

    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—É—Å–µ–ª—å –î–û —Å–ø–∏—Å–∫–∞ –∫—É—Ä—Å–æ–≤
    var carousel = createCarousel(courses.slice(0, 5)); // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 5 –∫—É—Ä—Å–æ–≤ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
    Main.appendChild(carousel);

    var ctxmenu = document.createElement('div');
    {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–æ–≤)
        if (localStorage.getItem('role') === 'author') {
            var deleteBtn = document.createElement('div');
            deleteBtn.textContent = `üóëÔ∏è Delete`
            deleteBtn.classList.add('ctxmenu-item', 'delete');
            ctxmenu.appendChild(deleteBtn);
        }

        ctxmenu.classList.add('menu');
        ctxmenu.classList.add('closed');
        ctxmenu.style.position = 'absolute';
    }

    var coursesList = document.createElement('div');
    coursesList.classList.add('courses')

    var currentCourseId = null; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∫—É—Ä—Å–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑–≤–∞–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é

    courses.forEach(course => {
        var el = document.createElement('div');
        el.classList.add('course');
        {
            var previewImage = document.createElement('img');
            previewImage.src = course.background_url;
            el.appendChild(previewImage);

            var title = document.createElement('h3');
            title.textContent = course.title;
            el.appendChild(title);

            var rate = "";
            for (let i = 0; i < 5; i++) {
                if (course.rating <= i) {
                    rate += '‚òÜ'
                } else {
                    rate += '‚òÖ'
                }
            }
            var rating = document.createElement('p');
            rating.textContent = rate
            rating.classList.add('rating')
            el.appendChild(rating)

            el.addEventListener('contextmenu', (e) => {
                e.preventDefault()
                currentCourseId = course.id;
                ctxmenu.style.left = e.clientX + 'px';
                ctxmenu.style.top = e.clientY + 'px';
                ctxmenu.classList.replace('closed', 'opened');
                
                // –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => { 
                    if (ctxmenu.classList.contains('opened')) {
                        ctxmenu.classList.replace('opened', 'closed') 
                    }
                }, 3000)
            })

            el.addEventListener('click', () => {
                localStorage.setItem('active_course', course.id);
                window.open('/info.html');
            })
        }
        coursesList.appendChild(el)
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    ctxmenu.querySelector('.ctxmenu-item:first-child').addEventListener('click', () => {
        if (currentCourseId) {
            localStorage.setItem('active_course', currentCourseId);
            window.open('/info.html');
        }
        ctxmenu.classList.replace('opened', 'closed');
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞
    if (localStorage.getItem('role') === 'author') {
        ctxmenu.querySelector('.delete').addEventListener('click', async () => {
            if (currentCourseId) {
                const confirmDelete = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫—É—Ä—Å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.');
                if (confirmDelete) {
                    await deleteCourse(currentCourseId);
                    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫—É—Ä—Å–æ–≤
                    location.reload();
                }
            }
            ctxmenu.classList.replace('opened', 'closed');
        });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    document.addEventListener('click', (e) => {
        if (!ctxmenu.contains(e.target)) {
            ctxmenu.classList.replace('opened', 'closed');
        }
    });

    Main.appendChild(coursesList);
    Main.appendChild(ctxmenu)
    document.body.appendChild(Main);
}

async function deleteCourse(courseId) {
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
        let courses = await LoadCourses();
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –∫—É—Ä—Å—ã, —É–¥–∞–ª—è—è –≤—ã–±—Ä–∞–Ω–Ω—ã–π
        const updatedCourses = courses.filter(course => course.id !== courseId);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        localStorage.setItem('user_created_courses', JSON.stringify(updatedCourses));
        
        alert('–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫—É—Ä—Å–∞:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫—É—Ä—Å–∞.');
    }
}

function createCarousel(featuredCourses) {
    const carousel = document.createElement('div');
    carousel.className = 'carousel-container';

    carousel.innerHTML = `
        <div class="carousel">
            ${featuredCourses.map((course, index) => `
                <div class="carousel-item ${index === 0 ? 'active' : ''}">
                    <img src="${course.background_url}" alt="${course.title}">
                    <div class="carousel-content">
                        <h3>${course.title}</h3>
                        <p>${course.description.substring(0, 100)}...</p>
                        <span class="carousel-rating">${'‚òÖ'.repeat(Math.floor(course.rating))}${'‚òÜ'.repeat(5 - Math.floor(course.rating))}</span>
                    </div>
                </div>
            `).join('')}
        </div>
        <button class="carousel-btn prev">‚Äπ</button>
        <button class="carousel-btn next">‚Ä∫</button>
        <div class="carousel-indicators">
            ${featuredCourses.map((_, index) => `
                <span class="indicator ${index === 0 ? 'active' : ''}"></span>
            `).join('')}
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–∞—Ä—É—Å–µ–ª–∏
    initializeCarousel(carousel);
    return carousel;
}

function initializeCarousel(carousel) {
    let currentIndex = 0;
    const items = carousel.querySelectorAll('.carousel-item');
    const indicators = carousel.querySelectorAll('.indicator');
    const totalItems = items.length;

    function showSlide(index) {
        items.forEach(item => item.classList.remove('active'));
        indicators.forEach(indicator => indicator.classList.remove('active'));

        items[index].classList.add('active');
        indicators[index].classList.add('active');
        currentIndex = index;
    }

    function nextSlide() {
        showSlide((currentIndex + 1) % totalItems);
    }

    function prevSlide() {
        showSlide((currentIndex - 1 + totalItems) % totalItems);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    carousel.querySelector('.next').addEventListener('click', nextSlide);
    carousel.querySelector('.prev').addEventListener('click', prevSlide);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
    let autoSlide = setInterval(nextSlide, 5000);

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫—É –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    carousel.addEventListener('mouseenter', () => clearInterval(autoSlide));
    carousel.addEventListener('mouseleave', () => {
        autoSlide = setInterval(nextSlide, 5000);
    });

    // –ö–ª–∏–∫ –ø–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º
    indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => showSlide(index));
    });
}

async function LoadCourses() {
    try {
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫—É—Ä—Å—ã –∏–∑ localStorage
        const userCourses = localStorage.getItem('user_created_courses');
        if (userCourses) {
            return JSON.parse(userCourses);
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫—É—Ä—Å–æ–≤, –∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ
        var courses = await fetch('data/courses.json')
            .then(data => data.json());
            
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤ localStorage –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
        localStorage.setItem('user_created_courses', JSON.stringify(courses));
        
        return courses;
    } catch (error) {
        alert(`Error: courses loading error: ${error}`)
        return [];
    }
}